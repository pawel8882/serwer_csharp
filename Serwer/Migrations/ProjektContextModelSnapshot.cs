// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Serwer.Models;

namespace Serwer.Migrations
{
    [DbContext(typeof(ProjektContext))]
    partial class ProjektContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Serwer.Models.Person", b =>
                {
                    b.Property<long>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProjektID")
                        .HasColumnType("bigint");

                    b.Property<string>("Rola")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.HasIndex("ProjektID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Serwer.Models.PersonProjekty", b =>
                {
                    b.Property<long>("PersonProjektyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("PersonID")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjektID")
                        .HasColumnType("bigint");

                    b.HasKey("PersonProjektyID");

                    b.HasIndex("ProjektID");

                    b.ToTable("PersonProjekty");
                });

            modelBuilder.Entity("Serwer.Models.Projekt", b =>
                {
                    b.Property<long>("ProjektID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjektID");

                    b.ToTable("Projekt");
                });

            modelBuilder.Entity("Serwer.Models.ProjektDetails", b =>
                {
                    b.Property<long>("ProjektDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("DataDodania")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProjektID")
                        .HasColumnType("bigint");

                    b.Property<string>("opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjektDetailsID");

                    b.HasIndex("ProjektID");

                    b.ToTable("ProjektDetails");
                });

            modelBuilder.Entity("Serwer.Models.Person", b =>
                {
                    b.HasOne("Serwer.Models.Projekt", null)
                        .WithMany("Persony")
                        .HasForeignKey("ProjektID");
                });

            modelBuilder.Entity("Serwer.Models.PersonProjekty", b =>
                {
                    b.HasOne("Serwer.Models.Projekt", null)
                        .WithMany("PersonProjekty")
                        .HasForeignKey("ProjektID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Serwer.Models.ProjektDetails", b =>
                {
                    b.HasOne("Serwer.Models.Projekt", null)
                        .WithMany("ProjektDetails")
                        .HasForeignKey("ProjektID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Serwer.Models.Projekt", b =>
                {
                    b.Navigation("PersonProjekty");

                    b.Navigation("Persony");

                    b.Navigation("ProjektDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
